# Sxml document with ideas on what syntax to use. Not all is implented.

# Normal element with all types of attributes(string, list, bool).
$x ak1=av ak2='abc def ghi' ak3="p q r"
   ak4=<l1 l2 l3> =ak5 =!ak6 [

  # method calls
  $!mod-key.method-name a=v [ ]

  # specific spacing control around normal elements
  $|x []  # no spacing
  $*|x [] # space left
  $|*x [] # space right if next char is not punctuation.
  $**x [] # both sides have spaces.

  # variable declaration, templating? (methods in it cannot run until later)
  $@v [ $b [ Hello World! ] ]
  # variable use
  $x [ The well known message is ... @v ]
  # produces
  $x [ The well known message is ... [ $b [ Hello World! ] ] ]

  # variable declaration with count from range 0 to 10 (exclusive like perl 6 ^10)
  # @w is use of the body content repeated the number of times in the range and
  # @@w is the use of count.
  $@w r=4 [ $!mod.m1 n=@@w [ $b [ @@w ] ] ]
  # this
  $x [ @w ]
  # produces
  $x [
    $!mod.m1 n=0 [ $b [ 0 ] ]
    $!mod.m1 n=1 [ $b [ 1 ] ]
    $!mod.m1 n=2 [ $b [ 2 ] ]
    $!mod.m1 n=3 [ $b [ 3 ] ]
  ]

  # variable declaration with a range from -1 to 20 (inclusive)
  $@z r=-1..20 [...]

  # variable declaration where the value is retrieved from content. the result
  # can be a number or a range.
  $@nrecs r=c [ $!db.nrecs db=x tbl=y ]
  $@recs [ $tr [ $td [ $!db.rec col=col1 row=@@nrecs ] ] ]
  $table [
    $tr [
      # not implement but could be
      $!SxmlCore.repeat element=th t1=<col2 col2> t2='spaced header col3' []
    ]

    @recs []
  ]
]
