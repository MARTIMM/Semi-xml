$!td.report title='Integer manipulations'
            class='Int' label='Int-test'
            test-file='doc/Examples/Documenting tests/test1.t' [

  $h1 [The Perl 6 integer test report]
  
  $p [
    The integer is in perl the most important type so we need to do our best
    to test it thoroughly. First we declare a constant to be used later and an
    integer without a value.
  ]

  $!td.code [!=
    constant ABC = 10;
    my Int $i;
  !]

  $!td.test line="nok $i.defined" [
    Declaration of an integer without an assignment of a value,
    should result in an undefinedness.
  ]

  $!td.test line="ok $i ~~ Int" [
    But when defined or not, its type value can be compared.
  ]

  $!td.todo n=1 [
    Someday we might make this not fail when wormwhole modules are installed
  ]

  $!td.test line="ok $i !~~ Int" [The opposite test should fail]
  $!td.test line="ok $i ~~ Cool" [
    Also inherited classes should be compared
    successfully.
  ]

  $h3 [Operations]
  
  $p [Next a few tests to see if operations can be applied to the integer]

  $!td.code [!=
    $i = ABC;
  !]

  $!td.test line="is $i, 10" [
    Initialize Int with the constant seems to have done well
  ]


  $!td.code [!=
    if ?"We are not stupid" {
  !]
  $!td.skip n=2 [
    Next 2 lines we need to skip because these are stupid tests
  ]
  $!td.test line='  ok 10 < 7' [10 not smaller than 7]
  $!td.test line='  ok 11 < 7' [neither is 11]
  $!td.code append=1 [!=}!]



  $!td.todo n=2 [
    Incredible tests which will be true in the not so distant future
  ]
  $!td.test line="is $i, 11" [Integer is 10 not 11]
  $!td.test line="like $i.Str, /'not 10, but text'/" [test some text]


  $!td.code [!=
    for ^10 {
  !]

  $!td.test line='  ok $^a < 7' [test a series of numbers against 7]

  $!td.code append=1 [!=}!]

  $!td.code [!=
    for ^11 {
  !]

  $!td.todo n=11 tl=1 [Should make todos with this test]
  $!td.test line='  ok $^a > 8' [test a series of numbers against 8]

  $!td.code append=1 [!=}!]

  $!td.code [!=
    my Int $i2 = 20304;
  !]
  $!td.bug n=2 [Mentioned a few bugs from the issues list on github ]
  $!td.test line='is $i2, 20304' [ok, for now]
  $!td.test line='is $i2 - 20305, 1' [not ok]
]
